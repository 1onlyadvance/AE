# PROPRIETARY AND CONFIDENTIAL
# Copyright (c) 2024 DELFICTUS I/O LLC
# Patent Pending - Application #63/826,067

FROM nvidia/cuda:11.7.1-cudnn8-devel-ubuntu20.04

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    ninja-build \
    python3-dev \
    python3-pip \
    libssl-dev \
    libcurl4-openssl-dev \
    libeigen3-dev \
    libopencv-dev \
    libboost-all-dev \
    libpcl-dev \
    libgtest-dev \
    libgmock-dev \
    rapidjson-dev \
    libtbb-dev \
    libopenmpi-dev \
    libhdf5-dev \
    clang-12 \
    llvm-12 \
    sudo \
    && rm -rf /var/lib/apt/lists/*

# Install Crypto++ 
RUN git clone https://github.com/weidai11/cryptopp.git /tmp/cryptopp && \
    cd /tmp/cryptopp && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/cryptopp

# Install Open Quantum Safe
RUN git clone https://github.com/open-quantum-safe/liboqs.git /tmp/liboqs && \
    cd /tmp/liboqs && \
    mkdir build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/liboqs

# Install Microsoft SEAL (Homomorphic Encryption)
RUN git clone https://github.com/microsoft/SEAL.git /tmp/SEAL && \
    cd /tmp/SEAL && \
    cmake -S . -B build -DSEAL_BUILD_EXAMPLES=OFF -DSEAL_BUILD_TESTS=OFF && \
    cmake --build build -j$(nproc) && \
    cmake --install build && \
    rm -rf /tmp/SEAL

# Install g2o (Graph Optimization)
RUN git clone https://github.com/RainerKuemmerle/g2o.git /tmp/g2o && \
    cd /tmp/g2o && \
    mkdir build && cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/g2o

# Install Python packages
RUN pip3 install --upgrade pip && \
    pip3 install \
    torch==2.0.0+cu117 \
    torchvision==0.15.0+cu117 \
    torchaudio==2.0.0 \
    --index-url https://download.pytorch.org/whl/cu117

RUN pip3 install \
    numpy \
    scipy \
    matplotlib \
    opencv-python \
    aiohttp \
    asyncio \
    cryptography \
    pycuda

# Create workspace
WORKDIR /workspace/ares_edge_system

# Copy ARES source code
COPY . .

# Build ARES (optional - can be done at runtime)
# RUN mkdir build && cd build && \
#     cmake -DCMAKE_BUILD_TYPE=Release .. && \
#     make -j$(nproc)

# Expose ports for network services
EXPOSE 8080 8443 9090

# Set up entrypoint
ENTRYPOINT ["/bin/bash"]